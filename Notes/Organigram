CUB3D
|
| ---> 1) PARSING
|	 		- 1.0 :	fichier .cub ?
|			- 1.1 : Open (à bien proteger)
|			- 1.2 : vérification image NSEW
|			- 1.3 : vérification color bon range ? [0 , 250]
|			- 1.4 : lecture (gnl simplifié pour éviter leaks)
|					--> trou de mur ?
|					--> caractère non-autorisé ? (hors 0, 1, N, S, W, E, " ")
|			- 1.5 : initiation fenêtre MLX (Hugo ou Alan à voir)
|
|			--> EN GROS : vérfication format fichier map (attention aux \n potentiellement présents et valables)
|			(-> astuce un peu moche : tout parcourir, placer dans une matrice et vérifier dedans chaque élément entourant un 0)
|
|
| ---> 2) RAYCAST
|			- "envoyer autant de rayons qu'il y a de pixels à afficher" <=> largeur(pixel) = nb rayon
|			- mxl_loop (pas hook)
|			- bon chance
|
|			- 1.1 : Équations lignes à partir rection regard
|			- 1.2 : Détecter intersections avec murs
|			- 1.3 : Déduire distance entre joueur et mur
|			- 1.4 : Corriger perspective
|			- 1.5 : Utiliser Thalès pour calculer hauteur perception mur
|			- 1.6 : Appliquer textures
|
|
| ---> 3) IMAGE
|			- Conversion pixels + gestion textures
|
|
| ---> 4) BONUS
			- Collision mur déjà implantée
			- mini map
			- animation (fixer image à chaque calcul)



Idées structures :
	- maps {floor, ceiling, 4x murs}	(parsing)
	- murs								(parsing)
	- player							(raycast)
	- écran								(raycast)
	- global {adresses!}				(main)


Tips :
	- open image donne un pointeur sur le premier pixel de l'image
	- appliquer couleur : appliquer le raycast au milieu ET PUIS APRÈS mettre couleur ciel et sol (et pas l'inverse)
